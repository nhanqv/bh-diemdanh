{"version":3,"sources":["components/Home.tsx","components/MessageBox.tsx","actions/actionConstants.ts","actions/kid.ts","containers/MessageBox.tsx","components/AppDrawer.tsx","containers/AppDrawer.tsx","components/Kids.tsx","appConstants.ts","actions/messageConstants.ts","containers/Kids.tsx","App.tsx","reducers/kid.ts","services/api.ts","sagas/kidList.ts","serviceWorker.ts","index.tsx"],"names":["Home","kidCLass","localStorage","getItem","react_default","a","createElement","react_router","to","concat","MessageBox","_ref","message","_React$useState","React","useState","_React$useState2","Object","slicedToArray","open","setOpen","handleClose","useEffect","Dialog","onClose","aria-labelledby","aria-describedby","fullWidth","DialogTitle","id","title","DialogContent","DialogContentText","content","DialogActions","Button","onClick","color","autoFocus","GETKIDLIST_START","GETCLASSLIST_START","SEND_MESSAGES_START","UPDATE_AIRTABLE_START","sendMessages","start","kidList","messageType","type","ActionType","payload","success","kid","failure","error","updateAirTable","getKidList","params","result","getClassList","classes","connect","state","components_MessageBox","useStyles","makeStyles","list","width","fullList","AppDrawer","_ref$classList","classList","console","log","side","top","left","bottom","right","setState","toggleDrawer","event","objectSpread","defineProperty","IconButton","edge","aria-label","Menu_default","Drawer","className","role","List","map","item","index","Fragment","ListItem","button","key","component","href","style","backgroundColor","borderStyle","borderColor","borderWidth","borderRadius","ListItemIcon","Favorite_default","ListItemText","disableTypography","primary","Typography","toUpperCase","Divider","dispatch","bindActionCreators","getClassListStart","setTimeout","components_AppDrawer","Kids","_ref$kidList","_ref$selectKid","selectKid","_ref$isLoading","isLoading","_ref$sendMessages","getKidListStart","_ref$filterKid","filterKid","_ref$filterVal","filterVal","_ref$selectAll","selectAll","_ref$unselectAll","unselectAll","_ref$search","search","searchVal","theme","createStyles","root","display","flexWrap","justifyContent","overflow","gridListTile","justify","alignItems","icon","margin","spacing","rightIcon","marginLeft","flexGrow","menuButton","marginRight","redIcon","greenIcon","yellowIcon","greyIcon","marginIcon","progress","fab","extendedIcon","formControl","minWidth","selectEmpty","marginTop","position","shape","fade","palette","common","white","&:hover","breakpoints","up","searchIcon","height","pointerEvents","inputRoot","inputInput","padding","fontSize","transition","transitions","create","toolbar","mixins","grow","gridListTileSelected","tileWidthPerc","getGridListCols","useTheme","numTiles","useMediaQuery","gridListTileStyle","filterKids","filter","searchFound","khongDau","name","toLowerCase","includes","filterFound","status","isDisabled","isSelected","length","inputStr","str","replace","trim","anchorEl","setAnchorEl","handleMenuClose","react","Container","AppBar","Toolbar","containers_AppDrawer","Search_default","InputBase","placeholder","onChange","target","value","input","inputProps","currentTarget","MoreVert_default","Menu","keepMounted","Boolean","MenuItem","disabled","paddingLeft","paddingRight","LinearProgress","Box","Select","InputLabel","GridList","cols","GridListTile","src","avatar","alt","GridListTileBar","actionIcon","CheckCircle_default","FiberManualRecord_default","containers_MessageBox","withRouter","kids","kidClass","keyword","match","setItem","components_Kids","App","Helmet","htmlAttributes","lang","path","exact","initialState","kidReducer","arguments","undefined","action","toConsumableArray","i","AIRTABLE_API_CONFIG","baseURL","timeout","getKidListFactory","optionConfig","config","instance","axios","asyncToGenerator","regenerator_default","mark","_callee","requestUrl","response","currentDay","wrap","_context","prev","next","get","sent","Error","Date","getDate","data","records","val","fields","Id","Name","contactIds","hasOwnProperty","ContactIds","split","Avatar","recordId","class","abrupt","t0","stop","_x","apply","this","getClassListFactory","_ref2","_callee2","_context2","ClassName","updateAirTableFactory","_ref3","_callee3","requestBody","jsonStr","_context3","JSON","stringify","toString","patch","parse","_x2","CHATFUEL_TOKEN","CHATFUEL_API_CONFIG","sendMessagesFactory","_ref4","_callee4","sendResult","blockName","contactId","sendService","postRequest","sendBlock","zaloId","_context4","encodeURI","startsWith","post","t1","_x3","_x4","runGetKidList","watchGetKidList","runGetClassList","watchGetClassList","runSendMessages","watchSendMessages","runUpdateAirTable","watchUpdateAirTable","rootSaga","api","call","put","_marked","takeLatest","_marked2","_marked3","_marked4","_context5","_marked5","_context6","_marked6","_context7","_marked7","_context8","_marked8","_context9","all","fork","_marked9","window","location","hostname","sagaMiddleWare","createSagaMiddleware","store","createStore","reducer","composeWithDevTools","applyMiddleware","ReactDOM","render","es","react_router_dom","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","run"],"mappings":"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","file":"static/js/main.01bcd19b.chunk.js","sourcesContent":["import React, { FC } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport './Home.css';\n\n\nconst companies = ['facebook', 'airbnb', 'netflix'];\n\nconst Home: FC = () => {\n\n  let kidCLass = localStorage.getItem(\"class\");\n  if (kidCLass) {\n    return (<Redirect to={`/${kidCLass}`} />);\n  }\n\n  return (<Redirect to={'/Red'} />);\n  \n\n  // <>\n  //   {/* <List celled relaxed>\n  //     {companies.map(companyName => (\n  //       <List.Item className=\"list-item\" key={companyName}>\n  //         <List.Icon name=\"users\" size=\"large\" verticalAlign=\"middle\" />\n  //         <List.Content>\n  //           <Link to={`/${companyName}/members`}>\n  //             {capitalize(companyName)}のメンバー\n  //           </Link>\n  //         </List.Content>\n  //       </List.Item>\n  //     ))}\n  //   </List> */}\n  // </>\n};\n\nexport default Home;\n","import React, { FC } from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Message } from '../reducers/kid';\r\n\r\nconst companies = ['facebook', 'airbnb', 'netflix'];\r\n\r\nexport interface MessageBoxProps {\r\n    message: Message;\r\n}\r\n\r\nconst MessageBox: FC<MessageBoxProps> = ({message}) => {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    React.useEffect(()=> {\r\n        message ? setOpen(true) : setOpen(false)\r\n    }, []);\r\n\r\n    function handleClickOpen() {\r\n        setOpen(true);\r\n    }\r\n\r\n\r\n    function handleClose() {\r\n        setOpen(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/* <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n                Open alert dialog\r\n            </Button> */}\r\n            <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n                fullWidth={true}\r\n            >\r\n                <DialogTitle id=\"alert-dialog-title\">{message.title}</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                        {message.content}\r\n                    </DialogContentText>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick={handleClose} color=\"primary\" autoFocus>\r\n                        Đóng\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MessageBox;\r\n","export const SELECT_KID = \"SELECT_KID\";\r\nexport const SELECT_ALL = \"SELECT_ALL\";\r\nexport const UNSELECT_ALL = \"UNSELECT_ALL\";\r\n\r\nexport const FILTER_KID = \"FILTER_KID\";\r\nexport const SEARCH = \"SEARCH\";\r\n\r\nexport const GETKIDLIST_START = \"GETKIDLIST_START\";\r\nexport const GETKIDLIST_SUCCESS = \"GETKIDLIST_SUCCESS\";\r\nexport const GETKIDLIST_FAILURE = \"GETKIDLIST_FAILURE\";\r\n\r\nexport const GETCLASSLIST_START = \"GETCLASSLIST_START\";\r\nexport const GETCLASSLIST_SUCCESS = \"GETCLASSLIST_SUCCESS\";\r\nexport const GETCLASSLIST_FAILURE = \"GETCLASSLIST_FAILURE\";\r\n\r\nexport const SEND_MESSAGES = \"SEND_MESSAGES\";\r\n\r\nexport const SEND_MESSAGES_START = \"SEND_MESSAGES_START\";\r\nexport const SEND_MESSAGES_SUCCESS = \"SEND_MESSAGES_SUCCESS\";\r\nexport const SEND_MESSAGES_FAILURE = \"SEND_MESSAGES_FAILURE\";\r\n\r\nexport const UPDATE_AIRTABLE_START = \"UPDATE_AIRTABLE_START\";\r\nexport const UPDATE_AIRTABLE_SUCCESS = \"UPDATE_AIRTABLE_SUCCESS\";\r\nexport const UPDATE_AIRTABLE_FAILURE = \"UPDATE_AIRTABLE_FAILURE\";\r\n","import { Kid } from \"../services/models\";\nimport { AxiosError } from 'axios';\nimport * as ActionType from './actionConstants';\nimport * as MessageType from './messageConstants';\n\n// export enum ActionType {\n//   SELECT = \"KID/SELECT\",\n//   GETKIDLIST_START = \"GETKIDLIST_START\",\n//   GETKIDLIST_SUCCESS = \"GETKIDLIST_SUCCESS\",\n//   GETKIDLIST_FAILURE = \"GETKIDLIST_FAILURE\",\n// }\n\n// export interface KidAction {\n//   type: string;\n//   id: number;\n// }\n\nexport const selectKid = (id: string) => ({\n  type: ActionType.SELECT_KID as typeof ActionType.SELECT_KID,\n  payload: id,\n});\n\nexport const selectAll = (kidList: Kid[]) => ({\n  type: ActionType.SELECT_ALL as typeof ActionType.SELECT_ALL,\n  payload: kidList,\n});\n\nexport const unselectAll = (kidList: Kid[]) => ({\n  type: ActionType.UNSELECT_ALL as typeof ActionType.UNSELECT_ALL,\n  payload: kidList,\n});\n\nexport const search = (keyword: string) => ({\n  type: ActionType.SEARCH as typeof ActionType.SEARCH,\n  payload: keyword,\n});\n\nexport const filterKid = (filterVal: string) => ({\n  type: ActionType.FILTER_KID as typeof ActionType.FILTER_KID,\n  payload: filterVal,\n});\n\nexport const sendMessagesTest = (kidList: Kid[]) => ({\n  type: ActionType.SEND_MESSAGES as typeof ActionType.SEND_MESSAGES,\n  payload: kidList,\n});\n\nexport const sendMessages = {\n  start: (kidList: Kid[], messageType: string) => ({\n    type: ActionType.SEND_MESSAGES_START as typeof ActionType.SEND_MESSAGES_START,\n    payload: { kidList, messageType },\n  }),\n\n  success: (kid: Kid) => ({\n    type: ActionType.SEND_MESSAGES_SUCCESS as typeof ActionType.SEND_MESSAGES_SUCCESS,\n    payload: kid,\n  }),\n\n  failure: (error: AxiosError) => ({\n    type: ActionType.SEND_MESSAGES_FAILURE as typeof ActionType.SEND_MESSAGES_FAILURE,\n    payload: error,\n  }),\n};\n\nexport const updateAirTable = {\n  start: (kidList: Kid[]) => ({\n    type: ActionType.UPDATE_AIRTABLE_START as typeof ActionType.UPDATE_AIRTABLE_START,\n    payload: kidList\n  }),\n\n  success: (kid: Kid) => ({\n    type: ActionType.UPDATE_AIRTABLE_SUCCESS as typeof ActionType.UPDATE_AIRTABLE_SUCCESS,\n    payload: kid,\n  }),\n\n  failure: (error: AxiosError) => ({\n    type: ActionType.UPDATE_AIRTABLE_FAILURE as typeof ActionType.UPDATE_AIRTABLE_FAILURE,\n    payload: error,\n  }),\n};\n\nexport const getKidList = {\n  start: (params: string) => ({\n    type: ActionType.GETKIDLIST_START as typeof ActionType.GETKIDLIST_START,\n    payload: params,\n  }),\n\n  success: (result: Kid[]) => ({\n    type: ActionType.GETKIDLIST_SUCCESS as typeof ActionType.GETKIDLIST_SUCCESS,\n    payload: result,\n  }),\n\n  failure: (params: AxiosError) => ({\n    type: ActionType.GETKIDLIST_FAILURE as typeof ActionType.GETKIDLIST_FAILURE,\n    payload: params,\n  }),\n};\n\nexport const getClassList = {\n  start: () => ({\n    type: ActionType.GETCLASSLIST_START as typeof ActionType.GETCLASSLIST_START,\n  }),\n\n  success: (classes: string[]) => ({\n    type: ActionType.GETCLASSLIST_SUCCESS as typeof ActionType.GETCLASSLIST_SUCCESS,\n    payload: classes,\n  }),\n\n  failure: (params: AxiosError) => ({\n    type: ActionType.GETCLASSLIST_FAILURE as typeof ActionType.GETCLASSLIST_FAILURE,\n    payload: params,\n  }),\n};\n\nexport type Action =\n  | ReturnType<typeof sendMessagesTest>\n  | ReturnType<typeof selectKid>\n  | ReturnType<typeof selectAll>\n  | ReturnType<typeof unselectAll>\n  | ReturnType<typeof filterKid>\n  | ReturnType<typeof search>\n  | ReturnType<typeof updateAirTable.start>\n  | ReturnType<typeof updateAirTable.success>\n  | ReturnType<typeof updateAirTable.failure>\n  | ReturnType<typeof sendMessages.start>\n  | ReturnType<typeof sendMessages.success>\n  | ReturnType<typeof sendMessages.failure>\n  | ReturnType<typeof getKidList.start>\n  | ReturnType<typeof getKidList.success>\n  | ReturnType<typeof getKidList.failure>\n  | ReturnType<typeof getClassList.start>\n  | ReturnType<typeof getClassList.success>\n  | ReturnType<typeof getClassList.failure>;\n","import React, { FC } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router';\r\nimport { AppState, Message } from '../reducers/kid';\r\nimport MessageBox from '../components/MessageBox';\r\n\r\n\r\ninterface StateProps {\r\n    message?: Message;\r\n}\r\n\r\ntype EnhancedProps = StateProps;\r\n\r\nconst mapStateToProps = (state: AppState): StateProps => ({\r\n    message: state.message,\r\n});\r\n\r\nconst MessageContainer: FC<EnhancedProps> = ({\r\n    message,\r\n}) => {\r\n\r\n    return (\r\n        message ? <MessageBox message={message} /> : null\r\n    );\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    null,\r\n)(MessageContainer);\r\n","import Drawer from '@material-ui/core/Drawer';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Favorite from '@material-ui/icons/Favorite';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport React, { FC } from 'react';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 250,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n});\r\n\r\ninterface AppDrawerProps {\r\n  classList?: string[];\r\n}\r\n\r\nconst AppDrawer: FC<AppDrawerProps> = ({\r\n  classList = []\r\n}) => {\r\n  console.log(\"AppDrawer\");\r\n  console.log(classList);\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    top: false,\r\n    left: false,\r\n    bottom: false,\r\n    right: false,\r\n  });\r\n\r\n  type DrawerSide = 'top' | 'left' | 'bottom' | 'right';\r\n  const toggleDrawer = (side: DrawerSide, open: boolean) => (\r\n    event: React.MouseEvent,\r\n  ) => {\r\n    setState({ ...state, [side]: open });\r\n  };\r\n\r\n  const sideList = (side: DrawerSide) => (\r\n    <div\r\n      className={classes.list}\r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(side, false)}\r\n    >\r\n      <List>\r\n        {classList.map((item, index) => (\r\n          <>\r\n            <ListItem button key={index} component=\"a\" href={`/${item}`}\r\n              style={{ backgroundColor: item, borderStyle: \"solid\", borderColor: \"white\", borderWidth: 2, borderRadius: 5 }}>\r\n              <ListItemIcon>\r\n                <Favorite color=\"secondary\" />\r\n              </ListItemIcon>\r\n              <ListItemText disableTypography\r\n                primary={<Typography style={{ color: '#FFFFFF' }}>\r\n                  {item.toUpperCase()}\r\n                </Typography>} />\r\n            </ListItem>\r\n            <Divider />\r\n          </>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <IconButton\r\n        edge=\"start\"\r\n        // className={classes.menuButton}\r\n        color=\"inherit\"\r\n        aria-label=\"open drawer\"\r\n        onClick={toggleDrawer('left', true)}\r\n      >\r\n        <MenuIcon />\r\n      </IconButton>\r\n      <Drawer open={state.left} onClose={toggleDrawer('left', false)}>\r\n        {sideList('left')}\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppDrawer;","import React, { FC, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators, Dispatch } from 'redux';\r\nimport { getClassList } from '../actions/kid';\r\nimport AppDrawer from '../components/AppDrawer';\r\nimport { AppState } from '../reducers/kid';\r\n\r\n\r\ninterface StateProps {\r\n    classList: string[];\r\n}\r\n\r\ninterface DispatchProps {\r\n    getClassListStart: () => void;\r\n}\r\n\r\ntype EnhancedProps = StateProps &\r\n    DispatchProps;\r\n\r\nconst mapStateToProps = (state: AppState): StateProps => ({\r\n    classList: state.classList\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps =>\r\n    bindActionCreators(\r\n        {\r\n            getClassListStart: () =>\r\n                getClassList.start(),\r\n        },\r\n        dispatch,\r\n    );\r\n\r\nconst AppDrawerContainer: FC<EnhancedProps> = ({\r\n    classList,\r\n    getClassListStart\r\n}) => {\r\n\r\n    useEffect(() => {\r\n        setTimeout(() => getClassListStart(), 1000);\r\n    }, []);\r\n\r\n    return (\r\n        <AppDrawer classList={classList} />\r\n    );\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(AppDrawerContainer);\r\n","import AppBar from \"@material-ui/core/AppBar\";\r\nimport Container from '@material-ui/core/Container';\r\nimport GridList from \"@material-ui/core/GridList\";\r\nimport GridListTile from \"@material-ui/core/GridListTile\";\r\nimport GridListTileBar from \"@material-ui/core/GridListTileBar\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Select from '@material-ui/core/Select';\r\nimport { createStyles, fade, makeStyles, Theme, useTheme } from \"@material-ui/core/styles\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport CheckCircle from \"@material-ui/icons/CheckCircle\";\r\nimport FiberManualRecord from '@material-ui/icons/FiberManualRecord';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport * as React from \"react\";\r\nimport { FC } from \"react\";\r\nimport * as MessageType from '../actions/messageConstants';\r\nimport * as AppConstants from '../appConstants';\r\nimport { Kid } from \"../services/models\";\r\nimport Box from '@material-ui/core/Box';\r\nimport MessageBox from '../containers/MessageBox';\r\nimport {Message} from '../reducers/kid';\r\nimport AppDrawer from '../containers/AppDrawer';\r\n\r\nexport interface KidsProps {\r\n  left?: boolean;\r\n  kidList?: Kid[];\r\n  selectKid?: (id: string) => void;\r\n  isLoading: boolean;\r\n  getKidListStart: (sheetName: string) => void;\r\n  sendMessages?: (kidList: Kid[], messageType: string) => void;\r\n  filterKid?: (filterVal: string) => void;\r\n  filterVal?: string;\r\n  selectAll?: (selectAll: Kid[]) => void;\r\n  unselectAll?: (selectAll: Kid[]) => void;\r\n  search?: (keyword: string) => void;\r\n  searchVal?: string;\r\n  message?: Message;\r\n  classList?: string[];\r\n}\r\n\r\nconst Kids: FC<KidsProps> = ({\r\n  left = false,\r\n  kidList = [],\r\n  selectKid = () => { },\r\n  isLoading = false,\r\n  getKidListStart = () => { },\r\n  sendMessages = () => { },\r\n  filterKid = () => { },\r\n  filterVal = \"\",\r\n  selectAll = () => { },\r\n  unselectAll = () => { },\r\n  search = () => { },\r\n  searchVal,\r\n  message,\r\n  classList = [],\r\n}) => {\r\n\r\n  const useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n      root: {\r\n        display: \"flex\",\r\n        flexWrap: \"wrap\",\r\n        justifyContent: \"space-around\",\r\n        overflow: \"hidden\",\r\n        // backgroundColor: theme.palette.background.paper\r\n      },\r\n      gridListTile: {\r\n        // width: 177,\r\n        // height: 180,\r\n        justify: \"center\",\r\n        alignItems: \"center\"\r\n      },\r\n      icon: {\r\n        color: \"rgba(255, 255, 255, 0.54)\"\r\n      },\r\n      button: {\r\n        margin: theme.spacing(1),\r\n        width: 80\r\n      },\r\n      rightIcon: {\r\n        marginLeft: theme.spacing(1)\r\n      },\r\n      title: {\r\n        flexGrow: 1\r\n      },\r\n      menuButton: {\r\n        marginRight: theme.spacing(2)\r\n      },\r\n      list: {\r\n        width: 250\r\n      },\r\n      redIcon: {\r\n        color: \"red\"\r\n      },\r\n      greenIcon: {\r\n        color: \"green\"\r\n      },\r\n      yellowIcon: {\r\n        color: \"yellow\"\r\n      },\r\n      greyIcon: {\r\n        color: \"grey\"\r\n      },\r\n      marginIcon: {\r\n        margin: 10\r\n      },\r\n      progress: {\r\n        margin: theme.spacing(2),\r\n      },\r\n      fab: {\r\n        margin: theme.spacing(1),\r\n        // right: 20,\r\n        // position: 'fixed'\r\n      },\r\n      extendedIcon: {\r\n        marginRight: theme.spacing(1),\r\n      },\r\n      formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n      },\r\n      selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n      search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n          backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n          marginLeft: theme.spacing(3),\r\n          width: 'auto',\r\n        },\r\n      },\r\n      searchIcon: {\r\n        width: theme.spacing(7),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n      },\r\n      inputRoot: {\r\n        color: 'inherit',\r\n      },\r\n      inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 7),\r\n        fontSize: 16,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n          width: 200,\r\n        },\r\n      },\r\n      toolbar: theme.mixins.toolbar,\r\n      grow: {\r\n        flexGrow: 1,\r\n      },\r\n      gridListTileSelected: {\r\n        // width: 177,\r\n        // height: 180,\r\n        justify: \"center\",\r\n        alignItems: \"center\",\r\n        borderStyle: \"solid\",\r\n        borderWidth: 10,\r\n        borderColor: \"#d4d4d5\",\r\n      }\r\n    })\r\n  );\r\n  // if(!localStorage.getItem('userData')){\r\n  //   return (<Redirect to={'/'}/>)\r\n  // }\r\n\r\n  console.log(kidList);\r\n\r\n  const classes = useStyles();\r\n\r\n  var tileWidthPerc = \"50%\";\r\n\r\n  const getGridListCols = () => {\r\n    const theme = useTheme();\r\n    // console.log(props.width);\r\n    var numTiles = 2;\r\n    if (useMediaQuery(theme.breakpoints.up('xl'))) {\r\n      numTiles = 6;\r\n      tileWidthPerc = \"17%\";\r\n    }\r\n\r\n    if (useMediaQuery(theme.breakpoints.up('lg'))) {\r\n      numTiles = 5;\r\n      tileWidthPerc = \"20%\";\r\n    }\r\n\r\n    if (useMediaQuery(theme.breakpoints.up('md'))) {\r\n      numTiles = 4;\r\n      tileWidthPerc = \"25%\";\r\n    }\r\n\r\n    if (useMediaQuery(theme.breakpoints.up('sm'))) {\r\n      numTiles = 3;\r\n      tileWidthPerc = \"33%\";\r\n    }\r\n\r\n    return numTiles;\r\n  };\r\n\r\n  console.log(getGridListCols());\r\n\r\n  // // const [state, setState] = React.useState({\r\n  // //   left: false,\r\n  // //   kids: kids\r\n  // // });\r\n\r\n  // // const handleClick = (id: number) => (\r\n  // //   event: React.MouseEvent<HTMLLIElement, MouseEvent>\r\n  // // ) => {\r\n  // //   console.log(id);\r\n  // //   let newTileState = state.kids.map(tile =>\r\n  // //     tile.id === id ? { ...tile, isSelected: !tile.isSelected } : tile\r\n  // //   );\r\n\r\n  // //   setState({ ...state, kids: newTileState });\r\n  // //   console.log(state);\r\n  // // };\r\n\r\n  // type DrawerSide = \"left\";\r\n  // const toggleDrawer = (side: DrawerSide, open: boolean) => (\r\n  //   event: React.MouseEvent\r\n  // ) => {\r\n  //   // setState({ ...state, [side]: open });\r\n  //   console.log();\r\n  // };\r\n\r\n  // const sideList = (side: DrawerSide) => (\r\n  //   <div\r\n  //     className={classes.list}\r\n  //     role=\"presentation\"\r\n  //     onClick={toggleDrawer(side, false)}\r\n  //   >\r\n  //     <List>\r\n  //       {[\"RED\", \"BLUE\", \"YELLOW\", \"GREEN\"].map((text, index) => (\r\n  //         <ListItem button key={text}>\r\n  //           <ListItemIcon>\r\n  //             <Face className={classes.redIcon} />\r\n  //           </ListItemIcon>\r\n  //           <ListItemText primary={text} />\r\n  //         </ListItem>\r\n  //       ))}\r\n  //     </List>\r\n  //     <Divider />\r\n  //     {/* <List>\r\n  //       {[\"All mail\", \"Trash\", \"Spam\"].map((text, index) => (\r\n  //         <ListItem button key={text}>\r\n  //           <ListItemIcon>\r\n  //             {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\r\n  //           </ListItemIcon>\r\n  //           <ListItemText primary={text} />\r\n  //         </ListItem>\r\n  //       ))}\r\n  //     </List> */}\r\n  //   </div>\r\n  // );\r\n\r\n  const gridListTileStyle = {\r\n    width: tileWidthPerc,\r\n    height: 180\r\n  };\r\n\r\n  const filterKids = kidList.filter(item => {\r\n    let searchFound = false;\r\n\r\n    if (searchVal) {\r\n      console.log(\"search \" + searchVal);\r\n      if (khongDau(item.name.toLowerCase()).includes(khongDau(searchVal.toLowerCase()))) {\r\n        searchFound = true;\r\n      }\r\n    }\r\n    else {\r\n      searchFound = true;\r\n    }\r\n\r\n    let filterFound = false;\r\n    if (filterVal === AppConstants.FILTER_ALL) {\r\n      filterFound = true;\r\n    } else if (filterVal === AppConstants.FILTER_GOSCHOOL) {\r\n      if (item.status === AppConstants.STATUS_GO_SCHOOL ||\r\n        item.status === AppConstants.STATUS_LEAVE_SCHOOL) {\r\n        filterFound = true;\r\n      }\r\n    } else if (filterVal === AppConstants.FILTER_ABSENT) {\r\n      if (item.status === AppConstants.STATUS_ABSENT ||\r\n        item.status === AppConstants.STATUS_ABSENT_ALLOW) {\r\n        filterFound = true;\r\n      }\r\n    } else if (filterVal === AppConstants.FILTER_UNKNOWN) {\r\n      if (!item.status) {\r\n        filterFound = true;\r\n      }\r\n    }\r\n\r\n    return searchFound && filterFound;\r\n  });\r\n\r\n  // Disable functions if there is no kids selected\r\n  const isDisabled: boolean = filterKids.filter(item => item.isSelected).length === 0;\r\n\r\n  function khongDau(inputStr: string) {\r\n    var str = inputStr;\r\n    str = str.toLowerCase();\r\n    str = str.replace(/à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ/g, \"a\");\r\n    str = str.replace(/è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ/g, \"e\");\r\n    str = str.replace(/ì|í|ị|ỉ|ĩ/g, \"i\");\r\n    str = str.replace(/ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ/g, \"o\");\r\n    str = str.replace(/ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ/g, \"u\");\r\n    str = str.replace(/ỳ|ý|ỵ|ỷ|ỹ/g, \"y\");\r\n    str = str.replace(/đ/g, \"d\");\r\n    str = str.replace(/!|@|%|\\^|\\*|\\(|\\)|\\+|\\=|\\<|\\>|\\?|\\/|,|\\.|\\:|\\;|\\'|\\\"|\\&|\\#|\\[|\\]|~|\\$|_|`|-|{|}|\\||\\\\/g, \" \");\r\n    str = str.replace(/ + /g, \" \");\r\n    str = str.trim();\r\n    return str;\r\n  }\r\n\r\n  function handleFilter(event: React.ChangeEvent<{ name?: string; value: unknown }>) {\r\n    var filterVal: string = event.target.value as string;\r\n    console.log(event.target.value);\r\n    filterKid(filterVal);\r\n  }\r\n\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n  function handleMenuClick(event: React.MouseEvent<HTMLButtonElement>) {\r\n    setAnchorEl(event.currentTarget);\r\n  }\r\n\r\n  function handleMenuClose(messageType: string) {\r\n    setAnchorEl(null);\r\n    console.log(messageType);\r\n    if (messageType) {\r\n      sendMessages(kidList, messageType)\r\n    }\r\n\r\n  }\r\n\r\n  function handleSelectAll() {\r\n    setAnchorEl(null);\r\n    selectAll(filterKids);\r\n  }\r\n\r\n  function handleUnselectAll() {\r\n    setAnchorEl(null);\r\n    unselectAll(filterKids);\r\n  }\r\n\r\n  function handleSearch(event: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) {\r\n    search(event.target.value);\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root} >\r\n\r\n      <Container>\r\n        <AppBar position=\"fixed\" color=\"secondary\" >\r\n          <Toolbar>\r\n            <AppDrawer />\r\n            <div className={classes.search}>\r\n              <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n              </div>\r\n              <InputBase\r\n                placeholder=\"Tìm kiếm…\"\r\n                onChange={handleSearch}\r\n                classes={{\r\n                  root: classes.inputRoot,\r\n                  input: classes.inputInput,\r\n                }}\r\n                inputProps={{ 'aria-label': 'search' }}\r\n              />\r\n            </div>\r\n\r\n            <div className={classes.grow} />\r\n\r\n            <IconButton edge=\"end\" color=\"inherit\" onClick={handleMenuClick}>\r\n              <MoreIcon />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"simple-menu\"\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={Boolean(anchorEl)}\r\n              onClose={() => handleMenuClose(\"\")}\r\n            >\r\n              <MenuItem onClick={handleSelectAll}>Chọn tất cả</MenuItem>\r\n              <MenuItem onClick={handleUnselectAll}>Bỏ chọn tất cả</MenuItem>\r\n              <MenuItem disabled={isDisabled} onClick={() => handleMenuClose(MessageType.MESSAGE_GO_SCHOOL)}>Đi học</MenuItem>\r\n              <MenuItem disabled={isDisabled} onClick={() => handleMenuClose(MessageType.MESSAGE_LEAVE_SCHOOL)}>Đã về</MenuItem>\r\n              <MenuItem disabled={isDisabled} onClick={() => handleMenuClose(MessageType.MESSAGE_ABSENT_ALLOW)}>Nghỉ có phép</MenuItem>\r\n              <MenuItem disabled={isDisabled} onClick={() => handleMenuClose(MessageType.MESSAGE_ABSENT)}>Nghỉ không phép</MenuItem>\r\n            </Menu>\r\n\r\n          </Toolbar>\r\n        </AppBar>\r\n      </Container>\r\n\r\n\r\n      <Container className={classes.toolbar}></Container>\r\n\r\n      <Container style={{ paddingLeft: 0, paddingRight: 0, marginTop: -5 }}>\r\n        {\r\n          isLoading ? <LinearProgress /> : <div style={{ height: 4 }}> </div>\r\n        }\r\n\r\n      </Container>\r\n\r\n      <Container>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Box flexGrow={1}>\r\n            <Select\r\n              value={filterVal}\r\n              onChange={handleFilter}\r\n              className={classes.formControl}\r\n            >\r\n              <MenuItem value={AppConstants.FILTER_ALL}>Tất cả</MenuItem>\r\n              <MenuItem value={AppConstants.FILTER_GOSCHOOL}>Đi học</MenuItem>\r\n              <MenuItem value={AppConstants.FILTER_ABSENT}>Nghỉ học</MenuItem>\r\n              <MenuItem value={AppConstants.FILTER_UNKNOWN}>Chưa thông báo</MenuItem>\r\n            </Select>\r\n          </Box>\r\n          <Box>\r\n            <InputLabel>Số bé: {filterKids.length}</InputLabel>\r\n          </Box>\r\n        </Box>\r\n      </Container>\r\n\r\n      <Container>\r\n        <GridList\r\n          cols={getGridListCols()}\r\n          style={{ marginTop: 16 }}\r\n        >\r\n          {filterKids.map(item => (\r\n            <GridListTile\r\n              className={item.isSelected ? classes.gridListTileSelected : classes.gridListTile}\r\n              style={gridListTileStyle}\r\n              key={item.id}\r\n              onClick={() => selectKid(item.id)}\r\n\r\n            >\r\n              <img src={item.avatar} alt={item.name} />\r\n              <GridListTileBar\r\n                title={item.name}\r\n                actionIcon={\r\n                  item.isSelected ? (\r\n                    <CheckCircle className={classes.greenIcon} />\r\n                  ) : (item.status == AppConstants.STATUS_GO_SCHOOL ? <FiberManualRecord className={classes.greenIcon} /> :\r\n                    (item.status == AppConstants.STATUS_LEAVE_SCHOOL ? <FiberManualRecord className={classes.greyIcon} /> :\r\n                      (item.status == AppConstants.STATUS_ABSENT_ALLOW ? <FiberManualRecord className={classes.yellowIcon} /> :\r\n                        (item.status == AppConstants.STATUS_ABSENT ? <FiberManualRecord className={classes.redIcon} /> : \"\"))))\r\n                }\r\n              />\r\n            </GridListTile>\r\n          ))}\r\n        </GridList>\r\n        <MessageBox />\r\n        \r\n      </Container>\r\n\r\n      {/* <Fab color=\"secondary\" aria-label=\"edit\" className={classes.fab} style={fabStyle}>\r\n        <SendIcon />\r\n      </Fab> */}\r\n    </div>\r\n  );\r\n};\r\n\r\n// export default withWidth()(Kids);\r\nexport default Kids;\r\n\r\n","export const FILTER_ALL = \"FILTER_ALL\";\r\nexport const FILTER_GOSCHOOL = \"FILTER_GOSCHOOL\";\r\nexport const FILTER_ABSENT = \"FILTER_ABSENT\";\r\nexport const FILTER_UNKNOWN = \"FILTER_UNKNOWN\";\r\n\r\nexport const STATUS_GO_SCHOOL = \"Đi học\";\r\nexport const STATUS_LEAVE_SCHOOL = \"Đã về\";\r\nexport const STATUS_ABSENT_ALLOW = \"Nghỉ có phép\";\r\nexport const STATUS_ABSENT = \"Nghỉ không phép\";","export const MESSAGE_GO_SCHOOL = \"Đi học\";\r\nexport const MESSAGE_LEAVE_SCHOOL = \"Đã về\";\r\nexport const MESSAGE_ABSENT_ALLOW = \"Nghỉ có phép\";\r\nexport const MESSAGE_ABSENT = \"Nghỉ không phép\";\r\n\r\n// export enum MessageType {\r\n//     GO_SCHOOL = \"Đi học\",\r\n//     LEAVE_SCHOOL = \"Đã về\",\r\n//     ABSENT_ALLOW = \"Nghỉ có phép\",\r\n//     ABSENT = \"Nghỉ không phép\",\r\n// }","import React, { FC, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators, Dispatch } from 'redux';\r\nimport { RouteComponentProps, withRouter } from 'react-router';\r\nimport { Kid } from '../services/models';\r\nimport { AppState } from '../reducers/kid';\r\nimport { getKidList, selectKid, sendMessages, filterKid, selectAll, unselectAll, search } from '../actions/kid';\r\nimport Kids, { KidsProps } from '../components/Kids';\r\n\r\ninterface StateProps {\r\n  kidList: Kid[];\r\n  isLoading: boolean;\r\n  filterVal?: string;\r\n  searchVal?: string;\r\n  classList?: string[];\r\n}\r\n\r\ninterface DispatchProps {\r\n  getKidListStart: (className: string) => void;\r\n  selectKid: (id: string) => void;\r\n  sendMessages: (kidList: Kid[], messageType: string) => void;\r\n  filterKid: (filterVal: string) => void;\r\n  selectAll: (kidList: Kid[]) => void;\r\n  unselectAll: (kidList: Kid[]) => void;\r\n  search: (keyword: string) => void;\r\n}\r\n\r\ntype EnhancedKidsProps = KidsProps & \r\n  StateProps &\r\n  DispatchProps &\r\n  RouteComponentProps<{ kidClass: string }>;\r\n\r\nconst mapStateToProps = (state: AppState): StateProps => ({\r\n  kidList: state.kids,\r\n  filterVal: state.filterVal,\r\n  searchVal: state.searchVal,\r\n  isLoading: state.isLoading,\r\n  classList: state.classList,\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): DispatchProps =>\r\n  bindActionCreators(\r\n    {\r\n      getKidListStart: (kidClass: string) =>\r\n        getKidList.start(kidClass),\r\n\r\n      selectKid: (id: string) =>\r\n        selectKid(id),\r\n\r\n      sendMessages: (kidList: Kid[], messageType: string) =>\r\n        sendMessages.start(kidList, messageType),\r\n\r\n      filterKid: (filterVal: string) =>\r\n        filterKid(filterVal),\r\n\r\n      selectAll: (kidList: Kid[]) =>\r\n        selectAll(kidList),\r\n\r\n      unselectAll: (kidList: Kid[]) =>\r\n        unselectAll(kidList),\r\n\r\n      search: (keyword: string) =>\r\n        search(keyword),\r\n    },\r\n    dispatch,\r\n  );\r\n\r\nconst KidsContainer: FC<EnhancedKidsProps> = ({\r\n  kidList,\r\n  isLoading,\r\n  getKidListStart,\r\n  selectKid,\r\n  sendMessages,\r\n  filterKid,\r\n  filterVal,\r\n  selectAll,\r\n  unselectAll,\r\n  search,\r\n  searchVal,\r\n  match,\r\n}) => {\r\n  const { kidClass } = match.params;\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"class\", kidClass);\r\n    console.log(\"KidsContainer \" + kidClass);\r\n    setTimeout(() => getKidListStart(kidClass), 1000);\r\n    // getMembersStart(kidClass);\r\n    // sendMessages(kidList, \"\");\r\n  }, []);\r\n\r\n  return (\r\n    <Kids kidList={kidList} \r\n      isLoading={isLoading} \r\n      getKidListStart={getKidListStart} \r\n      selectKid={selectKid}\r\n      filterKid={filterKid}\r\n      sendMessages={sendMessages}\r\n      filterVal={filterVal}\r\n      selectAll={selectAll}\r\n      unselectAll={unselectAll}\r\n      search={search}\r\n      searchVal={searchVal} />\r\n  );\r\n};\r\n\r\nexport default withRouter(\r\n  connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n  )(KidsContainer),\r\n);\r\n","import React, { FC } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Redirect, Route, Switch } from 'react-router';\nimport './App.css';\nimport Home from './components/Home';\nimport MessageBox from './components/MessageBox';\nimport Kids from './containers/Kids';\n\n\n\nconst title = 'ĐIỂM DANH - BABY\\'S HOME';\n\nconst App: FC = () => (\n  <>\n    <Helmet htmlAttributes={{ lang: 'ja' }}>\n      <title>{title}</title>\n    </Helmet>\n\n    {/* <header className=\"App-header\">\n      <h1>{title}</h1>\n    </header> */}\n    <Switch>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/home\" exact component={Home} />\n      <Route path=\"/MessageBox\" component={MessageBox} />\n      <Route path=\"/:kidClass\" component={Kids} />\n      <Redirect to=\"/\" />\n    </Switch>\n  </>\n);\n\nexport default App;\n","import { Reducer } from 'redux';\r\nimport { AxiosError } from 'axios';\r\n\r\nimport { Action } from '../actions/kid';\r\nimport * as ActionType from '../actions/actionConstants';\r\nimport { Kid } from \"../services/models\";\r\nimport * as AppConstants from '../appConstants';\r\n\r\nexport interface Message {\r\n  title: string;\r\n  content: string;\r\n}\r\n\r\nexport interface AppState {\r\n  kids: Kid[];\r\n  classList: string[];\r\n  filterVal?: string;\r\n  searchVal?: string;\r\n  isLoading: boolean;\r\n  error?: AxiosError;\r\n  message?: Message;\r\n}\r\n\r\nexport const initialState: AppState = {\r\n  kids: [],\r\n  classList: [],\r\n  filterVal: AppConstants.FILTER_ALL,\r\n  isLoading: false,\r\n};\r\n\r\nconst kidReducer: Reducer<AppState, Action> = (\r\n  state: AppState = initialState,\r\n  action: Action,\r\n): AppState => {\r\n  switch (action.type) {\r\n    case ActionType.GETKIDLIST_START:\r\n      return {\r\n        ...state,\r\n        kids: [],\r\n        isLoading: true,\r\n      };\r\n    case ActionType.GETKIDLIST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        kids: [...action.payload],\r\n        isLoading: false,\r\n      };\r\n    case ActionType.GETKIDLIST_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        // message: {\r\n        //   title: \"LỖI\",\r\n        //   content: \"Đã có lỗi xảy ra\"\r\n        // },\r\n        error: action.payload,\r\n      };\r\n\r\n    case ActionType.GETCLASSLIST_START:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ActionType.GETCLASSLIST_SUCCESS:\r\n      return {\r\n        ...state,\r\n        classList: [...action.payload],\r\n        isLoading: false,\r\n      };\r\n    case ActionType.GETCLASSLIST_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        // message: {\r\n        //   title: \"LỖI\",\r\n        //   content: \"Đã có lỗi xảy ra\"\r\n        // },\r\n        error: action.payload,\r\n      };\r\n\r\n    case ActionType.SEND_MESSAGES_START:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ActionType.SEND_MESSAGES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        // message: {\r\n        //   title: \"THÀNH CÔNG\",\r\n        //   content: \"Đã gửi thành công\"\r\n        // },\r\n        isLoading: false,\r\n      };\r\n    case ActionType.SEND_MESSAGES_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        // message: {\r\n        //   title: \"LỖI\",\r\n        //   content: \"Đã có lỗi xảy ra khi gửi\"\r\n        // },\r\n        error: action.payload,\r\n      };\r\n\r\n    case ActionType.UPDATE_AIRTABLE_START:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case ActionType.UPDATE_AIRTABLE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        kids: state.kids.map(item => {\r\n          let kidList = state.kids;\r\n          for (let i = 0; i < kidList.length; i++) {\r\n            if (kidList[i].isSelected) {\r\n              item.isSelected = false;\r\n            }\r\n          }\r\n\r\n          return item;\r\n        }),\r\n        // kids: state.kids.map(item => {\r\n        //   if (action.payload.id === item.id) {\r\n        //     item.status = action.payload.status;\r\n        //     item.isSelected = false;\r\n        //   }\r\n        //   return item;\r\n        // }),\r\n        // filterKids: [...state.kids],\r\n        isLoading: false,\r\n      };\r\n    case ActionType.UPDATE_AIRTABLE_FAILURE:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        // message: {\r\n        //   title: \"LỖI\",\r\n        //   content: \"Đã có lỗi xảy ra\"\r\n        // },\r\n        error: action.payload,\r\n      };\r\n\r\n    case ActionType.SELECT_KID:\r\n      return {\r\n        ...state,\r\n        kids: state.kids.map(item => {\r\n          if (item.id === action.payload) {\r\n            item.isSelected = !item.isSelected;\r\n          }\r\n          return item;\r\n        })\r\n      };\r\n\r\n    case ActionType.SELECT_ALL:\r\n      return {\r\n        ...state,\r\n        kids: state.kids.map(item => {\r\n          let kidList = action.payload;\r\n          for (let i = 0; i < kidList.length; i++) {\r\n            if (item.id === kidList[i].id) {\r\n              item.isSelected = true;\r\n            }\r\n          }\r\n\r\n          return item;\r\n        })\r\n      };\r\n\r\n    case ActionType.UNSELECT_ALL:\r\n      return {\r\n        ...state,\r\n        kids: state.kids.map(item => {\r\n          let kidList = action.payload;\r\n          for (let i = 0; i < kidList.length; i++) {\r\n            if (item.id === kidList[i].id) {\r\n              item.isSelected = false;\r\n            }\r\n          }\r\n\r\n          return item;\r\n        })\r\n      };\r\n\r\n\r\n    case ActionType.SEARCH:\r\n      return {\r\n        ...state,\r\n        searchVal: action.payload\r\n      };\r\n\r\n    case ActionType.FILTER_KID:\r\n      return {\r\n        ...state,\r\n        filterVal: action.payload,\r\n        kids: state.kids.map(item => {\r\n          if (item.isSelected) {\r\n            item.isSelected = false\r\n          }\r\n\r\n          return item;\r\n        })\r\n        // filterKids: state.kids.filter(item => {\r\n        //   item.isSelected = false;\r\n\r\n        //   if (action.payload === AppConstants.FILTER_ALL) {\r\n        //     return true;\r\n        //   }\r\n\r\n        //   if (item.status) {\r\n        //     switch (action.payload) {\r\n        //       case AppConstants.FILTER_GOSCHOOL:\r\n        //         if (item.status === AppConstants.STATUS_GO_SCHOOL ||\r\n        //           item.status === AppConstants.STATUS_LEAVE_SCHOOL) {\r\n        //           return true;\r\n        //         }\r\n        //       case AppConstants.FILTER_ABSENT:\r\n        //         if (item.status === AppConstants.STATUS_ABSENT ||\r\n        //           item.status === AppConstants.STATUS_ABSENT_ALLOW) {\r\n        //           return true;\r\n        //         }\r\n        //       default:\r\n        //         return false;\r\n        //     }\r\n        //   }\r\n\r\n        //   if (action.payload === AppConstants.FILTER_UNKNOWN) {\r\n        //     return true;\r\n        //   }\r\n        //   else {\r\n        //     return false;\r\n        //   }\r\n        // })\r\n      };\r\n\r\n    default: {\r\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n      // const _: never = action;\r\n\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport default kidReducer;\r\n","import axios from 'axios';\r\nimport { Kid } from './models';\r\nimport * as MessageType from '../actions/messageConstants';\r\n\r\ninterface ApiConfig {\r\n  baseURL: string;\r\n  timeout: number;\r\n}\r\n\r\nconst AIRTABLE_BASE_KEY = \"app8JrpvvNCWIOQAN\";\r\nconst AIRTABLE_API_KEY = \"keyfPK5EI1cgILohx\";\r\nconst AIRTABLE_API_CONFIG: ApiConfig = {\r\n  baseURL: 'https://api.airtable.com/v0',\r\n  timeout: 7000,\r\n};\r\n\r\nexport const getKidListFactory = (optionConfig?: ApiConfig) => {\r\n  const config = {\r\n    ...AIRTABLE_API_CONFIG,\r\n    ...optionConfig,\r\n  };\r\n  const instance = axios.create(config);\r\n\r\n  const getKidList = async (kidClass: string) => {\r\n    try {\r\n      console.log(\"getKidList\");\r\n      const requestUrl = `/${AIRTABLE_BASE_KEY}/${kidClass}?api_key=${AIRTABLE_API_KEY}&view=Kids`;\r\n      const response = await instance.get(requestUrl);\r\n\r\n      if (response.status !== 200) {\r\n        throw new Error('Server Error');\r\n      }\r\n\r\n      let currentDay = new Date().getDate();\r\n\r\n      console.log(response.data);\r\n      const kidList: Kid[] = response.data.records.map((item: any) => {\r\n        const val = item.fields;\r\n        var kid: Kid = {\r\n          id: val.Id,\r\n          name: val.Name,\r\n          contactIds: val.hasOwnProperty(\"ContactIds\") ? val.ContactIds.split(\";\") : [],\r\n          avatar: val.hasOwnProperty(\"Avatar\") ? val.Avatar : \"\",\r\n          status: val.hasOwnProperty(currentDay) ? val[currentDay] : \"\",\r\n          recordId: item.id,\r\n          class: kidClass,\r\n        };\r\n\r\n        return kid;\r\n      });\r\n\r\n      console.log(\"GetKidList\");\r\n      console.log(kidList);\r\n\r\n      // remove first item and return\r\n      return kidList;\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  return getKidList;\r\n};\r\n\r\nexport const getClassListFactory = (optionConfig?: ApiConfig) => {\r\n  const config = {\r\n    ...AIRTABLE_API_CONFIG,\r\n    ...optionConfig,\r\n  };\r\n  const instance = axios.create(config);\r\n\r\n  const getClassList = async () => {\r\n    try {\r\n      console.log(\"getKidList\");\r\n      const requestUrl = `/${AIRTABLE_BASE_KEY}/Class?api_key=${AIRTABLE_API_KEY}&view=Classes`;\r\n      console.log(requestUrl);\r\n      const response = await instance.get(requestUrl);\r\n\r\n      if (response.status !== 200) {\r\n        throw new Error('Server Error');\r\n      }\r\n\r\n      console.log(response);\r\n\r\n      const classList: string[] = response.data.records.map((item: any) => item.fields.ClassName);\r\n      \r\n      // remove first item and return\r\n      return classList;\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  return getClassList;\r\n};\r\n\r\nexport const updateAirTableFactory = (optionConfig?: ApiConfig) => {\r\n  const config = {\r\n    ...AIRTABLE_API_CONFIG,\r\n    ...optionConfig,\r\n  };\r\n  const instance = axios.create(config);\r\n\r\n  const updateAirTable = async (kidList: Kid[]) => {\r\n    for (let i = 0; i < kidList.length; i++) {\r\n      if (kidList[i].isSelected) {\r\n        try {\r\n          console.log(\"updateAirTable\");\r\n          const requestUrl = `/${AIRTABLE_BASE_KEY}/${kidList[i].class}/${kidList[i].recordId}/?api_key=${AIRTABLE_API_KEY}`;\r\n          let currentDay = new Date().getDate();\r\n          const requestBody = {\r\n            fields: {\r\n              currentDay: kidList[i].status\r\n            }\r\n          };\r\n          console.log(requestUrl);\r\n          const jsonStr = JSON.stringify(requestBody).replace(\"currentDay\", currentDay.toString());\r\n          console.log(JSON.stringify(requestBody).replace(\"currentDay\", currentDay.toString()));\r\n          const response = await instance.patch(requestUrl, JSON.parse(jsonStr));\r\n          console.log(response);\r\n\r\n        } catch (err) {\r\n          console.log(err);\r\n        }\r\n      }\r\n\r\n    }\r\n  };\r\n\r\n  return updateAirTable;\r\n};\r\n\r\nconst CHATFULE_BOT_ID = \"5d5c2aaffdaf79000144292a\";\r\nconst CHATFUEL_TOKEN = \"mELtlMAHYqR0BvgEiMq8zVek3uYUK3OJMbtyrdNPTrQB9ndV0fM7lWTFZbM4MZvD\";\r\nconst CHATFUEL_MESSENGER = \"Messenger\";\r\nconst CHATFUEL_ZALO = \"Zalo\";\r\nconst CHATFUEL_BLOCK_DIHOC = \"_DiHoc\";\r\nconst CHATFUEL_BLOCK_NGHIHOC_COPHEP = \"_NghiHoc_CoPhep\";\r\nconst CHATFUEL_BLOCK_NGHIHOC = \"_NghiHoc\";\r\nconst CHATFUEL_BLOCK_VENHA = \"_VeNha\";\r\nconst CHATFUEL_DEFAULT_CONTACT_ID = \"2612331648778972\";\r\nconst CHATFUEL_API_CONFIG: ApiConfig = {\r\n  baseURL: `https://api.chatfuel.com/bots/${CHATFULE_BOT_ID}/users`,\r\n  timeout: 7000,\r\n};\r\nexport const sendMessagesFactory = (optionConfig?: ApiConfig) => {\r\n  const config = {\r\n    ...CHATFUEL_API_CONFIG,\r\n    ...optionConfig,\r\n  };\r\n  const instance = axios.create(config);\r\n\r\n  const sendMessages = async (kid: Kid, messageType: string) => {\r\n    try {\r\n      let sendResult: boolean = false;\r\n\r\n      let blockName;\r\n      switch (messageType) {\r\n        case MessageType.MESSAGE_GO_SCHOOL:\r\n          blockName = CHATFUEL_BLOCK_DIHOC;\r\n          break;\r\n\r\n        case MessageType.MESSAGE_LEAVE_SCHOOL:\r\n          blockName = CHATFUEL_BLOCK_VENHA;\r\n          break;\r\n\r\n        case MessageType.MESSAGE_ABSENT_ALLOW:\r\n          blockName = CHATFUEL_BLOCK_NGHIHOC_COPHEP;\r\n          break;\r\n\r\n        case MessageType.MESSAGE_ABSENT:\r\n          blockName = CHATFUEL_BLOCK_NGHIHOC;\r\n          break;\r\n      }\r\n\r\n      const name = encodeURI(kid.name);\r\n      for (let i = 0; i < kid.contactIds.length; i++) {\r\n        let contactId = kid.contactIds ? kid.contactIds[i].trim() : \"\";\r\n        let sendService = \"\";\r\n        let postRequest = \"\";\r\n        let sendBlock = \"\";\r\n        if (contactId.startsWith(\"m/\")) {\r\n          sendService = CHATFUEL_MESSENGER;\r\n\r\n          // remove prefix\r\n          contactId = contactId.replace(\"m/\", \"\");\r\n          sendBlock = sendService + blockName;\r\n          postRequest = `/${contactId}/send?chatfuel_token=${CHATFUEL_TOKEN}&chatfuel_message_tag=NON_PROMOTIONAL_SUBSCRIPTION&chatfuel_block_name=${sendBlock}&name=${name}`;\r\n        } else if (contactId.startsWith(\"m/\")) {\r\n          sendService = CHATFUEL_ZALO;\r\n          let zaloId = contactId.replace(\"z/\", \"\"); // remove prefix\r\n          postRequest = `/${CHATFUEL_DEFAULT_CONTACT_ID}/send?chatfuel_token=${CHATFUEL_TOKEN}&chatfuel_message_tag=NON_PROMOTIONAL_SUBSCRIPTION&chatfuel_block_name=${sendBlock}&name=${name}&zaloId=${zaloId}`;\r\n        }\r\n\r\n        console.log(\"sendMessages \");\r\n        console.log(postRequest);\r\n        const response = await instance.post(postRequest);\r\n        if (response.status !== 200) {\r\n          sendResult = sendResult || false;\r\n          // throw new Error('Server Error');\r\n        }\r\n\r\n        sendResult = true;\r\n      }\r\n\r\n      return sendResult;\r\n    } catch (err) {\r\n      throw err;\r\n    }\r\n  };\r\n\r\n  return sendMessages;\r\n};\r\n","import { all, call, fork, put, takeLatest } from 'redux-saga/effects';\r\nimport * as ActionType from '../actions/actionConstants';\r\nimport { getKidList, sendMessagesTest, sendMessages, updateAirTable, getClassList } from '../actions/kid';\r\nimport { getKidListFactory, sendMessagesFactory, updateAirTableFactory, getClassListFactory } from '../services/api';\r\nimport { Kid } from '../services/models';\r\n\r\nfunction* runGetKidList(action: ReturnType<typeof getKidList.start>) {\r\n  console.log(\"runGetKidList\" + action.payload);\r\n  const kidClass = action.payload;\r\n\r\n  try {\r\n    const api = getKidListFactory();\r\n    const result = yield call(api, kidClass);\r\n\r\n    yield put(getKidList.success(result));\r\n  } catch (error) {\r\n    yield put(getKidList.failure(error));\r\n  }\r\n}\r\n\r\nexport function* watchGetKidList() {\r\n  console.log(\"watchGetKidList\");\r\n  yield takeLatest(ActionType.GETKIDLIST_START, runGetKidList);\r\n}\r\n\r\nfunction* runGetClassList(action: ReturnType<typeof getClassList.start>) {\r\n\r\n  try {\r\n    const api = getClassListFactory();\r\n    const result = yield call(api);\r\n\r\n    yield put(getClassList.success(result));\r\n  } catch (error) {\r\n    yield put(getClassList.failure(error));\r\n  }\r\n}\r\n\r\nexport function* watchGetClassList() {\r\n  console.log(\"watchGetClassList\");\r\n  yield takeLatest(ActionType.GETCLASSLIST_START, runGetClassList);\r\n}\r\n\r\nfunction* runSendMessages(action: ReturnType<typeof sendMessages.start>) {\r\n  console.log(\"runSendMessages\");\r\n  const kidList: Kid[] = action.payload.kidList;\r\n  const messageType: string = action.payload.messageType;\r\n\r\n  for (let i = 0; i < kidList.length; i++) {\r\n    if (kidList[i].isSelected) {\r\n      try {\r\n        const api = sendMessagesFactory();\r\n        const result = yield call(api, kidList[i], messageType);\r\n\r\n        if (result) {\r\n          kidList[i].status = messageType;\r\n          yield put(sendMessages.success(kidList[i]));\r\n        }\r\n\r\n      } catch (error) {\r\n        console.log(error);\r\n        yield put(sendMessages.failure(error));\r\n      }\r\n    }\r\n  }\r\n\r\n  yield put(updateAirTable.start(kidList));\r\n\r\n}\r\n\r\nexport function* watchSendMessages() {\r\n  console.log(\"watchSendMessages\");\r\n  yield takeLatest(ActionType.SEND_MESSAGES_START, runSendMessages);\r\n}\r\n\r\nfunction* runUpdateAirTable(action: ReturnType<typeof updateAirTable.start>) {\r\n  console.log(\"runUpdateAirTable\");\r\n  const kidList = action.payload;\r\n\r\n  try {\r\n    const api = updateAirTableFactory();\r\n    const result = yield call(api, kidList);\r\n\r\n    yield put(updateAirTable.success(result));\r\n  } catch (error) {\r\n    yield put(updateAirTable.failure(error));\r\n  }\r\n}\r\n\r\nexport function* watchUpdateAirTable() {\r\n  console.log(\"watchUpdateAirTable\");\r\n  yield takeLatest(ActionType.UPDATE_AIRTABLE_START, runUpdateAirTable);\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  console.log(\"rootSaga\");\r\n  yield all([fork(watchGetKidList), \r\n            fork(watchGetClassList), \r\n            fork(watchSendMessages), \r\n            fork(watchUpdateAirTable)]);\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\n/* eslint func-style: 'off' */\n/* eslint no-param-reassign: 'off' */\n/* eslint no-use-before-define: 'off' */\n/* eslint '@typescript-eslint/no-use-before-define': 'off' */\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href,\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport App from './App';\nimport './index.css';\nimport reducer from './reducers/kid';\nimport rootSaga from './sagas/kidList';\nimport * as serviceWorker from './serviceWorker';\nimport './styles/semantic.min.css';\n\n\n\nconst sagaMiddleWare = createSagaMiddleware();\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(sagaMiddleWare)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root') as HTMLElement,\n);\n\nserviceWorker.unregister();\nsagaMiddleWare.run(rootSaga);\n"],"sourceRoot":""}